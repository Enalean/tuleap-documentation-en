@use "../variables";
@use "sass:color";

/* stylelint-disable selector-no-qualifying-type */
body.pinned {
    header {
        position: fixed;
        height: variables.$header-pinned-height;
        transform: translate3d(0, 0, 0);
        background: variables.$white;
        box-shadow: 0 1px 5px color.scale(variables.$dark-color, $alpha: -80%);
    }

    .header-content {
        height: variables.$header-pinned-height;
    }

    .header-logo-image {
        height: 50px;
    }

    @each $name, $hexa in variables.$guides {
        &.#{$name} header {
            .header-menu-item-container:hover {
                .header-menu-item {
                    color: color.adjust($hexa, $lightness: 30%);
                }
            }

            .header-menu-item {
                color: $hexa;

                &.active {
                    background: $hexa;
                    color: variables.$white;
                }
            }
        }
    }
}

body:not(.pinned) {
    &.black header {
        .header-logo-image-orange-white {
            display: block;
        }

        .header-logo-image-orange-black,
        .header-logo-image-white-white {
            display: none;
        }

        .header-burger {
            color: variables.$white;
        }

        .header-menu {
            @media screen and (max-width: #{variables.$tiny-screen-size}) {
                background: color.scale(variables.$dark-color, $alpha: -5%);

                &:not(.show) {
                    display: none;
                }
            }
        }

        .header-menu-item-container:hover {
            .header-menu-item {
                background: #000000;
                color: variables.$orange;
            }
        }

        .header-menu-item {
            color: variables.$white;
        }

        .header-submenu {
            background: #000000;

            @media screen and (max-width: #{variables.$mobile-screen-size}) {
                background: none;
            }
        }

        .header-submenu-item {
            color: variables.$white;

            &:hover {
                background: color.adjust(#000000, $lightness: 7%);
            }
        }
    }

    &.orange header {
        .header-logo-image-white-white {
            display: block;
        }

        .header-logo-image-orange-black,
        .header-logo-image-orange-white {
            display: none;
        }

        .header-burger {
            color: variables.$white;
        }

        .header-menu-item-container:hover {
            .header-menu-item {
                background: color.adjust(variables.$dark-color, $lightness: -5%);
                color: variables.$orange;
            }
        }

        .header-menu-item {
            color: variables.$white;

            &.active {
                background: variables.$white;
                color: variables.$orange;
            }
        }

        .header-submenu {
            background: color.adjust(variables.$dark-color, $lightness: -5%);

            @media screen and (max-width: #{variables.$mobile-screen-size}) {
                background: none;
            }
        }

        .header-submenu-item {
            color: variables.$white;

            &:hover {
                background: color.adjust(variables.$dark-color, $lightness: -10%);
            }
        }
    }

    &.orange header {
        .header-menu {
            @media screen and (max-width: #{variables.$tiny-screen-size}) {
                background: color.scale(#e07e3b, $alpha: -5%);

                &:not(.show) {
                    display: none;
                }
            }
        }
    }

    @each $name, $hexa in variables.$guides {
        &.#{$name} header {
            .header-menu-item {
                color: $hexa;

                &.active {
                    background: $hexa;
                    color: variables.$white;
                }
            }
        }
    }
}

.header-menu-item-container:hover .header-menu-item {
    background: variables.$dark-color;
    color: variables.$white;
}

header {
    display: flex;
    position: absolute;
    z-index: 10;
    top: 0;
    flex-direction: column;
    align-items: center;
    width: 100%;
    height: variables.$header-height;

    @media screen and (max-width: #{variables.$tiny-screen-size}) {
        position: fixed;
        width: 100vw;
        height: variables.$header-pinned-height;
        transform: translate3d(0, 0, 0);
    }
}

.header-content {
    display: flex;
    align-items: stretch;
    justify-content: space-between;
    width: variables.$container-width;
    height: variables.$header-height;

    @media screen and (min-width: #{variables.$big-screen-size}) {
        max-width: variables.$big-screen-size;
    }

    @media screen and (max-width: #{variables.$small-screen-size}) {
        width: 100%;
        padding: 0 20px;
    }

    @media screen and (max-width: #{variables.$tiny-screen-size}) {
        height: variables.$header-pinned-height;
    }
}

.header-logo {
    display: flex;
    align-items: center;
    height: 100%;
    margin: 0 30px 0 0;
}

.header-logo-image-white-white,
.header-logo-image-orange-white,
.header-logo-image-orange-black {
    height: 60px;

    @media screen and (max-width: #{variables.$tiny-screen-size}) {
        height: 50px;
    }
}

.header-logo-image-orange-black {
    display: block;
}

.header-logo-image-orange-white,
.header-logo-image-white-white {
    display: none;
}

.header-burger {
    display: none;
    color: variables.$orange;
    font-size: 40px;
    cursor: pointer;

    @media screen and (max-width: #{variables.$tiny-screen-size}) {
        display: flex;
        align-items: center;
    }
}

.header-menu {
    display: flex;
    align-items: center;

    @media screen and (max-width: #{variables.$tiny-screen-size}) {
        position: fixed;
        top: calc(#{variables.$header-pinned-height} - 10px);
        left: 0;
        flex-direction: column;
        justify-content: center;
        width: 100vw;
        height: calc(100vh - #{variables.$header-pinned-height} + 10px);
        background: color.scale(variables.$white, $alpha: -5%);

        &:not(.show) {
            display: none;
        }
    }

    @media screen and (max-width: #{variables.$mobile-screen-size}) {
        justify-content: stretch;
        overflow: scroll;
    }
}

.header-menu-item-container:hover {
    .header-menu-item {
        border-radius: 5px 5px 0 0;
        background: variables.$dark-color;
        color: variables.$white;
        text-decoration: none;

        &:only-child {
            border-radius: 5px;
        }
    }

    > .header-submenu {
        display: flex;
        pointer-events: auto;
    }
}

span.header-menu-item {
    line-height: normal;
    cursor: default;
}

.header-menu-item {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 5px;
    padding: 13px 10px;
    border-radius: 5px;
    color: variables.$orange;
    font-size: 12px;
    font-weight: 600;
    letter-spacing: .5px;
    line-height: normal;
    text-decoration: none;
    text-transform: uppercase;

    &.active {
        background: variables.$orange;
        color: variables.$white;
    }

    &:active,
    &:focus {
        text-decoration: none;
    }

    @media screen and (max-width: #{variables.$small-screen-size}) {
        padding: 10px 8px;
    }

    @media screen and (max-width: #{variables.$tiny-screen-size}) {
        margin: 15px 0;
        padding: 13px 10px;
        font-size: 18px;
    }
}

.header-submenu {
    display: none;
    position: absolute;
    z-index: 10;
    flex-direction: column;
    margin: -1px 5px 0;
    overflow: hidden;
    border-radius: 0 5px 5px;
    background: variables.$dark-color;
    box-shadow: 0 10px 20px color.scale(variables.$dark-color, $alpha: -80%);
    pointer-events: none;

    @media screen and (max-width: #{variables.$tiny-screen-size}) {
        position: relative;
        margin: -15px 0 0;
        border-radius: 0 0 5px 5px;
    }
    @media screen and (max-width: #{variables.$mobile-screen-size}) {
        display: flex;
        background: none;
        box-shadow: none;
        pointer-events: background-position;
    }
}

.header-submenu-item {
    display: flex;
    flex-direction: column;
    padding: 13px 10px;
    color: color.scale(variables.$white, $alpha: -10%);
    font-size: 13px;
    letter-spacing: .2px;
    text-decoration: none;

    &:hover {
        background: variables.$dark-color;
        color: color.scale(variables.$white, $alpha: -10%);
        text-decoration: none;
    }
    @media screen and (max-width: #{variables.$mobile-screen-size}) {
        color: variables.$typo-default-text-color;
    }
}

.header-submenu-item-details {
    margin: 10px 0 0;
    color: color.scale(variables.$white, $alpha: -5%);
    font-size: 10px;
    letter-spacing: .8px;
    line-height: normal;
    text-transform: uppercase;
}

section {
    scroll-margin-top: variables.$header-pinned-height;
}
