pipeline {
    agent {
        label 'agent-one-time-use'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build and publish image') {
            steps {
                script {
                    @Library('tuleap-jenkinsfile-library@master') _
                    def lib_signing = new org.tuleap.Signing();
                    lib_signing.prefetchToolsToSignDockerImages('ci-write');
                    def image_name = 'tuleap-documentation.docs.tuleap.org';
                    def image = docker.build(
                        image_name,
                        '-f docs.tuleap.org/Dockerfile .'
                    )
                    lib_signing.authenticateOnTailscale()
                    def registry_name = "nexus.enalean.com:22000";
                    docker.withRegistry("https://${registry_name}", 'ci-write') {
                        image.push()

                        lib_signing.signDockerImage("${registry_name}/${image_name}", env.VAULT, 'tuleap-additional-tools-signing', 'vault-role-tuleap-additional-tools-signing')
                    }
                }
            }
        }
    }
}
